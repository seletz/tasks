env_file = '.env'

[settings]
experimental = true
legacy_version_file = false  # Don't auto-detect from .python-version files

[tools]
uv = "latest"

[env]
_.python.venv = ".venv"
JOURNAL_NOTES_DIR = "/Users/seletz/develop/notes"

[tasks.ccusage]
run = [
	"bunx ccusage blocks --live"
]

[tasks.format-github-refs]
description = "Format unformatted GitHub references in markdown files"
run = [
	"./mise-tasks/format-github-refs"
]

# Documentation tasks
[tasks.serve-docs]
description = "Serve mkdocs documentation locally"
run = [
	"uv run mkdocs serve"
]

[tasks.test-docs]
description = "Test documentation build and validate (matches GitHub workflow)"
run = [
	"uv run mkdocs build --clean --strict",
	"echo \"Documentation size: $(du -sh site | cut -f1)\"",
	"echo 'âœ… Documentation build successful!'"
]

# Development quality tasks
[tasks.lint]
description = "Run linting checks on the codebase"
run = [
	"uv run ruff check packages/journal-lib/src/",
	"echo 'âœ… Ruff linting passed'"
]

[tasks.format]
description = "Format code with ruff"
run = [
	"uv run ruff format packages/journal-lib/src/",
	"echo 'âœ… Code formatted with ruff'"
]

[tasks.format-check]
description = "Check code formatting without making changes"
run = [
	"uv run ruff format --check packages/journal-lib/src/",
	"echo 'âœ… Code formatting check passed'"
]

[tasks.typecheck]
description = "Run type checking with ty (Astral's fast type checker)"
run = [
	"uv run ty check packages/journal-lib/src/",
	"echo 'âœ… Type checking passed with ty'"
]

[tasks.test]
description = "Run tests with coverage"
run = [
	"uv run pytest packages/journal-lib/tests/ -v --cov=journal_lib --cov-report=term-missing --cov-report=xml --cov-fail-under=90",
	"echo 'âœ… Tests passed with coverage â‰¥90%'"
]

[tasks.check]
description = "Run all quality checks (lint, format check, typecheck, test)"
depends = ["lint", "format-check", "typecheck", "test"]
run = [
	"echo 'ðŸŽ‰ All quality checks passed!'"
]
